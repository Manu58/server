"""
Django settings for ships project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
from typing import Final

from rest_framework.pagination import PageNumberPagination

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/
import environ
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ul#ln-zr=qvk9k92)4jq#c4_bfqgzh+f(1g2v+n7b+p+!hb#et'

# SECURITY WARNING: don't run with debug turned on in production!
env = environ.Env(
    TESTING=(bool, False),
    LOCAL=(bool, True),
    ALLOWED_HOSTS=(str, ['localhost', '127.0.0.1']),
    DB_HOST=(str, 'localhost'),
    DB_PORT=(int, 5432),
    DB_NAME=(str, 'dev'),
    AWS_STORAGE_BUCKET_NAME=(str, ''),
)


db_user = 'postgres'
db_password = '' if env('LOCAL') else'very_secret'

SESSION_COOKIE_SECURE: Final = False # not env('LOCAL')
SECURE_SSL_REDIRECT: Final = False # not env('LOCAL')
CSRF_COOKIE_SECURE: Final = False # not env('LOCAL')
SECURE_HSTS_SECONDS: Final = 3600


ALLOWED_HOSTS: Final = [env('ALLOWED_HOSTS')] if isinstance(env('ALLOWED_HOSTS'), str) else env('ALLOWED_HOSTS')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'ship_messages.apps.ShipMessagesConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ships.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ships.wsgi.application'

if env('LOCAL'):
    DEBUG = True
    STATIC_URL = '/static/'
else:
    INSTALLED_APPS.extend([
        'storages'
    ])
    AWS_STORAGE_BUCKET_NAME = env('AWS_STORAGE_BUCKET_NAME')
    AWS_S3_CUSTOM_DOMAIN = '%s.s3-eu-west-1.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
    DEBUG = False
    STATIC_URL = "https://%s/" % AWS_S3_CUSTOM_DOMAIN
    STORAGES: Final = {
        "staticfiles": {"BACKEND": "storages.backends.s3boto3.S3StaticStorage"},
        "default": {"BACKEND": 'storages.backends.s3boto3.S3Boto3Storage'}}



# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('DB_NAME'),
        'USER': db_user,
        'PASSWORD': db_password,
        'HOST': env("DB_HOST"),
        'PORT': env("DB_PORT")
    }
}


REST_FRAMEWORK: Final = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.DjangoModelPermissions'
    ),
    'EXCEPTION_HANDLER': 'ships.serializers.exception_handler',
    'PAGE_SIZE': 50
}

DEFAULT_PAGINATION_CLASS = PageNumberPagination
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True




# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

